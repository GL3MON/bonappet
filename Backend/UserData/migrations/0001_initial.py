# Generated by Django 5.1.1 on 2024-10-14 10:25

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryPartners',
            fields=[
                ('Employee_pid', models.CharField(default='BAdp2')),
                ('Employee_id_suf', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('phone_number', models.BigIntegerField(validators=[django.core.validators.MaxLengthValidator(10)])),
                ('vehicle_model', models.CharField(max_length=50)),
                ('license_number', models.CharField(max_length=15)),
                ('vehicle_id', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_pid', models.CharField(default='BA4')),
                ('user_id_suf', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=75)),
                ('user_mail', models.EmailField(max_length=45, unique=True)),
                ('phone_number', models.BigIntegerField(validators=[django.core.validators.MaxLengthValidator(10)])),
                ('address', models.CharField(max_length=450)),
                ('password', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(8)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
